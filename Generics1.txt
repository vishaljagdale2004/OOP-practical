import java.util.ArrayList;
import java.util.Collection;
import java.util.Scanner;

public class GenericCollectionCounterUserInput {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        ArrayList<Integer> numbers = getUserInput(scanner);

        System.out.println("Number of even numbers: " + countElements(numbers, new EvenNumberPredicate()));
        System.out.println("Number of odd numbers: " + countElements(numbers, new OddNumberPredicate()));
        System.out.println("Number of prime numbers: " + countElements(numbers, new PrimeNumberPredicate()));
        System.out.println("Number of palindromes: " + countElements(numbers, new PalindromePredicate()));

        scanner.close();
    }
    public static <T> int countElements(Collection<T> collection, ElementPropertyPredicate<T> predicate) {
        int count = 0;
        for (T element : collection) {
            if (predicate.test(element)) {
                count++;
            }
        }
        return count;
    }
    interface ElementPropertyPredicate<T> {
        boolean test(T element);
    }
    static class EvenNumberPredicate implements ElementPropertyPredicate<Integer> {
        @Override
        public boolean test(Integer element) {
            return element % 2 == 0;
        }
    }

    static class OddNumberPredicate implements ElementPropertyPredicate<Integer> {
        @Override
        public boolean test(Integer element) {
            return element % 2 != 0;
        }
    }

    static class PrimeNumberPredicate implements ElementPropertyPredicate<Integer> {
        @Override
        public boolean test(Integer element) {
            if (element < 2) return false;
            for (int i = 2; i <= Math.sqrt(element); i++) {
                if (element % i == 0) return false;
            }
            return true;
        }
    }

    static class PalindromePredicate implements ElementPropertyPredicate<Integer> {
        @Override
        public boolean test(Integer element) {
            String strElement = String.valueOf(element);
            return strElement.equals(new StringBuilder(strElement).reverse().toString());
        }
    }
    private static ArrayList<Integer> getUserInput(Scanner scanner) {
        ArrayList<Integer> inputList = new ArrayList<>();

        System.out.print("Enter the number of elements in the collection: ");
        int n = scanner.nextInt();

        System.out.println("Enter " + n + " integers:");

        for (int i = 0; i < n; i++) {
            System.out.print("Element " + (i + 1) + ": ");
            int element = scanner.nextInt();
            inputList.add(element);
        }

        return inputList;
    }
}
